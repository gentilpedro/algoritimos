// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Carro {
  id          Int          @id @default(autoincrement())
  modelo      String       @db.VarChar(30)
  marca       String       @db.VarChar(20)
  cor         String?      @db.VarChar(30)
  ano         Int          @db.SmallInt
  preco       Decimal      @db.Decimal(10, 2)
  combustivel Combustivel  @default(FLEX)
  km          Int          @db.MediumInt @default(0)
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  @@map("carros")
}

model CarroArquivado {
  id          Int          @id
  modelo      String       @db.VarChar(30)
  marca       String       @db.VarChar(20)
  cor         String?      @db.VarChar(30)
  ano         Int          @db.SmallInt
  preco       Decimal      @db.Decimal(10, 2)
  combustivel Combustivel  @default(FLEX)
  km          Int          @db.MediumInt @default(0)
  usuario     Usuario      @relation(fields: [usuarioId], references: [id])
  usuarioId   Int
  @@map("carrosArquivados")
}

enum Combustivel {
  FLEX
  GASOLINA
  DIESEL
  ELETRICO
  HIBRIDO
}

model Usuario {
  id                Int      @id @default(autoincrement())
  nome              String   @db.VarChar(60)
  email             String   @db.VarChar(40)
  senha             String   @db.VarChar(60)   // senha deve ser varchar(60)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt  
  carros            Carro[]
  carrosArquivados  CarroArquivado[]
  logs              Log[]
  @@map("usuarios")
}

model Log {
  id           Int      @id @default(autoincrement())
  descricao    String   @db.VarChar(60)
  complemento  String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt  
  usuario      Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId    Int
  @@map("logs")
}
